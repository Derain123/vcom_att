// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module MSHRFile(
  input         clock,
                reset,
                io_req_valid,
  input  [39:0] io_req_bits_addr,
  input  [6:0]  io_req_bits_tag,
  input  [4:0]  io_req_bits_cmd,
  input  [1:0]  io_req_bits_size,
  input         io_req_bits_signed,
  input  [1:0]  io_req_bits_dprv,
  input         io_req_bits_dv,
                io_req_bits_phys,
                io_req_bits_no_alloc,
                io_req_bits_no_xcpt,
  input  [63:0] io_req_bits_data,
  input  [7:0]  io_req_bits_mask,
  input         io_req_bits_tag_match,
  input  [1:0]  io_req_bits_old_meta_coh_state,
  input  [21:0] io_req_bits_old_meta_tag,
  input  [3:0]  io_req_bits_way_en,
  input         io_resp_ready,
                io_mem_acquire_ready,
                io_mem_grant_valid,
  input  [2:0]  io_mem_grant_bits_opcode,
  input  [1:0]  io_mem_grant_bits_param,
  input  [3:0]  io_mem_grant_bits_size,
  input  [2:0]  io_mem_grant_bits_source,
                io_mem_grant_bits_sink,
  input  [63:0] io_mem_grant_bits_data,
  input         io_mem_finish_ready,
                io_meta_read_ready,
                io_meta_write_ready,
                io_replay_ready,
                io_wb_req_ready,
  output        io_req_ready,
                io_resp_valid,
  output [39:0] io_resp_bits_addr,
  output [6:0]  io_resp_bits_tag,
  output [4:0]  io_resp_bits_cmd,
  output [1:0]  io_resp_bits_size,
  output        io_resp_bits_signed,
  output [1:0]  io_resp_bits_dprv,
  output        io_resp_bits_dv,
  output [63:0] io_resp_bits_data,
  output [7:0]  io_resp_bits_mask,
  output        io_resp_bits_has_data,
  output [63:0] io_resp_bits_store_data,
  output        io_secondary_miss,
                io_mem_acquire_valid,
  output [2:0]  io_mem_acquire_bits_opcode,
                io_mem_acquire_bits_param,
  output [3:0]  io_mem_acquire_bits_size,
  output [2:0]  io_mem_acquire_bits_source,
  output [31:0] io_mem_acquire_bits_address,
  output [7:0]  io_mem_acquire_bits_mask,
  output [63:0] io_mem_acquire_bits_data,
  output        io_mem_finish_valid,
  output [2:0]  io_mem_finish_bits_sink,
  output [3:0]  io_refill_way_en,
  output [9:0]  io_refill_addr,
  output        io_meta_read_valid,
  output [3:0]  io_meta_read_bits_idx,
  output        io_meta_write_valid,
  output [3:0]  io_meta_write_bits_idx,
                io_meta_write_bits_way_en,
  output [1:0]  io_meta_write_bits_data_coh_state,
  output [21:0] io_meta_write_bits_data_tag,
  output        io_replay_valid,
  output [39:0] io_replay_bits_addr,
  output [6:0]  io_replay_bits_tag,
  output [4:0]  io_replay_bits_cmd,
  output [1:0]  io_replay_bits_size,
  output        io_replay_bits_signed,
  output [1:0]  io_replay_bits_dprv,
  output [63:0] io_replay_bits_data,
  output        io_wb_req_valid,
  output [21:0] io_wb_req_bits_tag,
  output [3:0]  io_wb_req_bits_idx,
  output [2:0]  io_wb_req_bits_source,
                io_wb_req_bits_param,
  output [3:0]  io_wb_req_bits_way_en,
  output        io_probe_rdy,
                io_fence_rdy,
                io_replay_next
);

  wire            _io_req_ready_output;	// @[NBDcache.scala:443:22]
  wire            _mmios_0_io_req_ready;	// @[NBDcache.scala:418:22]
  wire            _mmios_0_io_resp_valid;	// @[NBDcache.scala:418:22]
  wire [39:0]     _mmios_0_io_resp_bits_addr;	// @[NBDcache.scala:418:22]
  wire [6:0]      _mmios_0_io_resp_bits_tag;	// @[NBDcache.scala:418:22]
  wire [4:0]      _mmios_0_io_resp_bits_cmd;	// @[NBDcache.scala:418:22]
  wire [1:0]      _mmios_0_io_resp_bits_size;	// @[NBDcache.scala:418:22]
  wire            _mmios_0_io_resp_bits_signed;	// @[NBDcache.scala:418:22]
  wire [1:0]      _mmios_0_io_resp_bits_dprv;	// @[NBDcache.scala:418:22]
  wire            _mmios_0_io_resp_bits_dv;	// @[NBDcache.scala:418:22]
  wire [63:0]     _mmios_0_io_resp_bits_data;	// @[NBDcache.scala:418:22]
  wire [7:0]      _mmios_0_io_resp_bits_mask;	// @[NBDcache.scala:418:22]
  wire            _mmios_0_io_resp_bits_has_data;	// @[NBDcache.scala:418:22]
  wire [63:0]     _mmios_0_io_resp_bits_store_data;	// @[NBDcache.scala:418:22]
  wire            _mmios_0_io_mem_access_valid;	// @[NBDcache.scala:418:22]
  wire [2:0]      _mmios_0_io_mem_access_bits_opcode;	// @[NBDcache.scala:418:22]
  wire [2:0]      _mmios_0_io_mem_access_bits_param;	// @[NBDcache.scala:418:22]
  wire [3:0]      _mmios_0_io_mem_access_bits_size;	// @[NBDcache.scala:418:22]
  wire [2:0]      _mmios_0_io_mem_access_bits_source;	// @[NBDcache.scala:418:22]
  wire [31:0]     _mmios_0_io_mem_access_bits_address;	// @[NBDcache.scala:418:22]
  wire [7:0]      _mmios_0_io_mem_access_bits_mask;	// @[NBDcache.scala:418:22]
  wire [63:0]     _mmios_0_io_mem_access_bits_data;	// @[NBDcache.scala:418:22]
  wire            _resp_arb_io_in_0_ready;	// @[NBDcache.scala:411:24]
  wire            _mmio_alloc_arb_io_in_0_ready;	// @[NBDcache.scala:409:30]
  wire            _mshrs_3_io_req_pri_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_req_sec_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_idx_match;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_3_io_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_mem_acquire_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_3_io_mem_acquire_bits_param;	// @[NBDcache.scala:367:22]
  wire [31:0]     _mshrs_3_io_mem_acquire_bits_address;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_mem_finish_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_3_io_mem_finish_bits_sink;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_refill_way_en;	// @[NBDcache.scala:367:22]
  wire [9:0]      _mshrs_3_io_refill_addr;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_meta_read_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_meta_read_bits_idx;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_meta_write_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_meta_write_bits_idx;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_meta_write_bits_way_en;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_3_io_meta_write_bits_data_coh_state;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_3_io_meta_write_bits_data_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_replay_valid;	// @[NBDcache.scala:367:22]
  wire [39:0]     _mshrs_3_io_replay_bits_addr;	// @[NBDcache.scala:367:22]
  wire [6:0]      _mshrs_3_io_replay_bits_tag;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_3_io_replay_bits_cmd;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_3_io_replay_bits_size;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_replay_bits_signed;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_3_io_replay_bits_dprv;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_3_io_replay_bits_sdq_id;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_wb_req_valid;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_3_io_wb_req_bits_tag;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_wb_req_bits_idx;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_3_io_wb_req_bits_param;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_3_io_wb_req_bits_way_en;	// @[NBDcache.scala:367:22]
  wire            _mshrs_3_io_probe_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_req_pri_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_req_sec_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_idx_match;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_2_io_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_mem_acquire_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_2_io_mem_acquire_bits_param;	// @[NBDcache.scala:367:22]
  wire [31:0]     _mshrs_2_io_mem_acquire_bits_address;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_mem_finish_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_2_io_mem_finish_bits_sink;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_refill_way_en;	// @[NBDcache.scala:367:22]
  wire [9:0]      _mshrs_2_io_refill_addr;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_meta_read_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_meta_read_bits_idx;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_meta_write_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_meta_write_bits_idx;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_meta_write_bits_way_en;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_2_io_meta_write_bits_data_coh_state;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_2_io_meta_write_bits_data_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_replay_valid;	// @[NBDcache.scala:367:22]
  wire [39:0]     _mshrs_2_io_replay_bits_addr;	// @[NBDcache.scala:367:22]
  wire [6:0]      _mshrs_2_io_replay_bits_tag;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_2_io_replay_bits_cmd;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_2_io_replay_bits_size;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_replay_bits_signed;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_2_io_replay_bits_dprv;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_2_io_replay_bits_sdq_id;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_wb_req_valid;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_2_io_wb_req_bits_tag;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_wb_req_bits_idx;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_2_io_wb_req_bits_param;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_2_io_wb_req_bits_way_en;	// @[NBDcache.scala:367:22]
  wire            _mshrs_2_io_probe_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_req_pri_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_req_sec_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_idx_match;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_1_io_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_mem_acquire_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_1_io_mem_acquire_bits_param;	// @[NBDcache.scala:367:22]
  wire [31:0]     _mshrs_1_io_mem_acquire_bits_address;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_mem_finish_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_1_io_mem_finish_bits_sink;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_refill_way_en;	// @[NBDcache.scala:367:22]
  wire [9:0]      _mshrs_1_io_refill_addr;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_meta_read_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_meta_read_bits_idx;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_meta_write_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_meta_write_bits_idx;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_meta_write_bits_way_en;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_1_io_meta_write_bits_data_coh_state;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_1_io_meta_write_bits_data_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_replay_valid;	// @[NBDcache.scala:367:22]
  wire [39:0]     _mshrs_1_io_replay_bits_addr;	// @[NBDcache.scala:367:22]
  wire [6:0]      _mshrs_1_io_replay_bits_tag;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_1_io_replay_bits_cmd;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_1_io_replay_bits_size;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_replay_bits_signed;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_1_io_replay_bits_dprv;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_1_io_replay_bits_sdq_id;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_wb_req_valid;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_1_io_wb_req_bits_tag;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_wb_req_bits_idx;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_1_io_wb_req_bits_param;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_1_io_wb_req_bits_way_en;	// @[NBDcache.scala:367:22]
  wire            _mshrs_1_io_probe_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_req_pri_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_req_sec_rdy;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_idx_match;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_0_io_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_mem_acquire_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_0_io_mem_acquire_bits_param;	// @[NBDcache.scala:367:22]
  wire [31:0]     _mshrs_0_io_mem_acquire_bits_address;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_mem_finish_valid;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_0_io_mem_finish_bits_sink;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_refill_way_en;	// @[NBDcache.scala:367:22]
  wire [9:0]      _mshrs_0_io_refill_addr;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_meta_read_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_meta_read_bits_idx;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_meta_write_valid;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_meta_write_bits_idx;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_meta_write_bits_way_en;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_0_io_meta_write_bits_data_coh_state;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_0_io_meta_write_bits_data_tag;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_replay_valid;	// @[NBDcache.scala:367:22]
  wire [39:0]     _mshrs_0_io_replay_bits_addr;	// @[NBDcache.scala:367:22]
  wire [6:0]      _mshrs_0_io_replay_bits_tag;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_0_io_replay_bits_cmd;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_0_io_replay_bits_size;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_replay_bits_signed;	// @[NBDcache.scala:367:22]
  wire [1:0]      _mshrs_0_io_replay_bits_dprv;	// @[NBDcache.scala:367:22]
  wire [4:0]      _mshrs_0_io_replay_bits_sdq_id;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_wb_req_valid;	// @[NBDcache.scala:367:22]
  wire [21:0]     _mshrs_0_io_wb_req_bits_tag;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_wb_req_bits_idx;	// @[NBDcache.scala:367:22]
  wire [2:0]      _mshrs_0_io_wb_req_bits_param;	// @[NBDcache.scala:367:22]
  wire [3:0]      _mshrs_0_io_wb_req_bits_way_en;	// @[NBDcache.scala:367:22]
  wire            _mshrs_0_io_probe_rdy;	// @[NBDcache.scala:367:22]
  wire            _alloc_arb_io_in_0_ready;	// @[NBDcache.scala:356:25]
  wire            _alloc_arb_io_in_1_ready;	// @[NBDcache.scala:356:25]
  wire            _alloc_arb_io_in_2_ready;	// @[NBDcache.scala:356:25]
  wire            _alloc_arb_io_in_3_ready;	// @[NBDcache.scala:356:25]
  wire            _replay_arb_io_in_0_ready;	// @[NBDcache.scala:355:26]
  wire            _replay_arb_io_in_1_ready;	// @[NBDcache.scala:355:26]
  wire            _replay_arb_io_in_2_ready;	// @[NBDcache.scala:355:26]
  wire            _replay_arb_io_in_3_ready;	// @[NBDcache.scala:355:26]
  wire            _replay_arb_io_out_valid;	// @[NBDcache.scala:355:26]
  wire [4:0]      _replay_arb_io_out_bits_cmd;	// @[NBDcache.scala:355:26]
  wire [4:0]      _replay_arb_io_out_bits_sdq_id;	// @[NBDcache.scala:355:26]
  wire            _wb_req_arb_io_in_0_ready;	// @[NBDcache.scala:354:26]
  wire            _wb_req_arb_io_in_1_ready;	// @[NBDcache.scala:354:26]
  wire            _wb_req_arb_io_in_2_ready;	// @[NBDcache.scala:354:26]
  wire            _wb_req_arb_io_in_3_ready;	// @[NBDcache.scala:354:26]
  wire            _meta_write_arb_io_in_0_ready;	// @[NBDcache.scala:353:30]
  wire            _meta_write_arb_io_in_1_ready;	// @[NBDcache.scala:353:30]
  wire            _meta_write_arb_io_in_2_ready;	// @[NBDcache.scala:353:30]
  wire            _meta_write_arb_io_in_3_ready;	// @[NBDcache.scala:353:30]
  wire            _meta_read_arb_io_in_0_ready;	// @[NBDcache.scala:352:29]
  wire            _meta_read_arb_io_in_1_ready;	// @[NBDcache.scala:352:29]
  wire            _meta_read_arb_io_in_2_ready;	// @[NBDcache.scala:352:29]
  wire            _meta_read_arb_io_in_3_ready;	// @[NBDcache.scala:352:29]
  reg  [16:0]     sdq_val;	// @[NBDcache.scala:339:24]
  wire [15:0]     _GEN = ~(sdq_val[15:0]);	// @[NBDcache.scala:339:24, :340:38]
  wire [4:0]      sdq_alloc_id = _GEN[0] ? 5'h0 : _GEN[1] ? 5'h1 : _GEN[2] ? 5'h2 : _GEN[3] ? 5'h3 : _GEN[4] ? 5'h4 : _GEN[5] ? 5'h5 : _GEN[6] ? 5'h6 : _GEN[7] ? 5'h7 : _GEN[8] ? 5'h8 : _GEN[9] ? 5'h9 : _GEN[10] ? 5'hA : _GEN[11] ? 5'hB : _GEN[12] ? 5'hC : _GEN[13] ? 5'hD : _GEN[14] ? 5'hE : _GEN[15] ? 5'hF : 5'h10;	// @[Mux.scala:47:70, NBDcache.scala:340:38, OneHot.scala:47:45]
  wire            sdq_rdy = sdq_val != 17'h1FFFF;	// @[Bitwise.scala:77:12, NBDcache.scala:339:24, :341:26]
  wire            sdq_enq = io_req_valid & _io_req_ready_output & io_req_bits_addr[31] & (io_req_bits_cmd == 5'h1 | io_req_bits_cmd == 5'h11 | io_req_bits_cmd == 5'h7 | io_req_bits_cmd == 5'h4 | io_req_bits_cmd == 5'h9 | io_req_bits_cmd == 5'hA | io_req_bits_cmd == 5'hB | io_req_bits_cmd == 5'h8 | io_req_bits_cmd == 5'hC | io_req_bits_cmd == 5'hD | io_req_bits_cmd == 5'hE | io_req_bits_cmd == 5'hF);	// @[Consts.scala:86:{32,49,66,76}, Mux.scala:47:70, NBDcache.scala:342:59, :443:22, package.scala:16:47]
  wire            tag_match = {8'h0, (_mshrs_0_io_idx_match ? _mshrs_0_io_tag : 22'h0) | (_mshrs_1_io_idx_match ? _mshrs_1_io_tag : 22'h0) | (_mshrs_2_io_idx_match ? _mshrs_2_io_tag : 22'h0) | (_mshrs_3_io_idx_match ? _mshrs_3_io_tag : 22'h0)} == io_req_bits_addr[39:10];	// @[Mux.scala:27:73, NBDcache.scala:348:{44,65}, :367:22]
  wire            _alloc_arb_io_out_ready_T = io_req_valid & sdq_rdy;	// @[NBDcache.scala:341:26, :376:41]
  wire            idx_match = _mshrs_0_io_idx_match | _mshrs_1_io_idx_match | _mshrs_2_io_idx_match | _mshrs_3_io_idx_match;	// @[NBDcache.scala:367:22, :394:27]
  reg  [8:0]      beatsLeft;	// @[Arbiter.scala:88:30]
  wire            idle = beatsLeft == 9'h0;	// @[Arbiter.scala:88:30, :89:28, :113:44]
  wire            _GEN_0 = _mshrs_1_io_mem_acquire_valid | _mshrs_0_io_mem_acquire_valid;	// @[NBDcache.scala:367:22, package.scala:245:43]
  wire            _GEN_1 = _mshrs_3_io_mem_acquire_valid | _mshrs_2_io_mem_acquire_valid | _GEN_0;	// @[NBDcache.scala:367:22, package.scala:245:43]
  wire            _GEN_2 = _mshrs_2_io_mem_acquire_valid | _mshrs_1_io_mem_acquire_valid | _mshrs_0_io_mem_acquire_valid;	// @[NBDcache.scala:367:22, package.scala:245:43]
  wire            earlyWinner_1 = ~_mshrs_0_io_mem_acquire_valid & _mshrs_1_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22]
  wire            earlyWinner_2 = ~_GEN_0 & _mshrs_2_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22, package.scala:245:43]
  wire            earlyWinner_3 = ~_GEN_2 & _mshrs_3_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22, package.scala:245:43]
  wire            earlyWinner_4 = ~_GEN_1 & _mmios_0_io_mem_access_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:418:22, package.scala:245:43]
  wire            _sink_ACancel_earlyValid_T = _mshrs_0_io_mem_acquire_valid | _mshrs_1_io_mem_acquire_valid;	// @[Arbiter.scala:108:36, NBDcache.scala:367:22]
  reg             state_0;	// @[Arbiter.scala:117:26]
  reg             state_1;	// @[Arbiter.scala:117:26]
  reg             state_2;	// @[Arbiter.scala:117:26]
  reg             state_3;	// @[Arbiter.scala:117:26]
  reg             state_4;	// @[Arbiter.scala:117:26]
  wire            muxStateEarly_0 = idle ? _mshrs_0_io_mem_acquire_valid : state_0;	// @[Arbiter.scala:89:28, :117:26, :118:30, NBDcache.scala:367:22]
  wire            muxStateEarly_1 = idle ? earlyWinner_1 : state_1;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire            muxStateEarly_2 = idle ? earlyWinner_2 : state_2;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire            muxStateEarly_3 = idle ? earlyWinner_3 : state_3;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire            muxStateEarly_4 = idle ? earlyWinner_4 : state_4;	// @[Arbiter.scala:89:28, :98:79, :117:26, :118:30]
  wire            out_5_valid = idle ? _sink_ACancel_earlyValid_T | _mshrs_2_io_mem_acquire_valid | _mshrs_3_io_mem_acquire_valid | _mmios_0_io_mem_access_valid : state_0 & _mshrs_0_io_mem_acquire_valid | state_1 & _mshrs_1_io_mem_acquire_valid | state_2 & _mshrs_2_io_mem_acquire_valid | state_3 & _mshrs_3_io_mem_acquire_valid | state_4 & _mmios_0_io_mem_access_valid;	// @[Arbiter.scala:89:28, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, NBDcache.scala:367:22, :418:22]
  reg             beatsLeft_1;	// @[Arbiter.scala:88:30]
  wire            _GEN_3 = _mshrs_1_io_mem_finish_valid | _mshrs_0_io_mem_finish_valid;	// @[NBDcache.scala:367:22, package.scala:245:43]
  wire            _GEN_4 = _mshrs_2_io_mem_finish_valid | _mshrs_1_io_mem_finish_valid | _mshrs_0_io_mem_finish_valid;	// @[NBDcache.scala:367:22, package.scala:245:43]
  wire            earlyWinner_1_1 = ~_mshrs_0_io_mem_finish_valid & _mshrs_1_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22]
  wire            earlyWinner_1_2 = ~_GEN_3 & _mshrs_2_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22, package.scala:245:43]
  wire            earlyWinner_1_3 = ~_GEN_4 & _mshrs_3_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :98:79, NBDcache.scala:367:22, package.scala:245:43]
  wire            _sink_ACancel_earlyValid_T_14 = _mshrs_0_io_mem_finish_valid | _mshrs_1_io_mem_finish_valid;	// @[Arbiter.scala:108:36, NBDcache.scala:367:22]
  reg             state_1_0;	// @[Arbiter.scala:117:26]
  reg             state_1_1;	// @[Arbiter.scala:117:26]
  reg             state_1_2;	// @[Arbiter.scala:117:26]
  reg             state_1_3;	// @[Arbiter.scala:117:26]
  wire            out_10_valid = beatsLeft_1 ? state_1_0 & _mshrs_0_io_mem_finish_valid | state_1_1 & _mshrs_1_io_mem_finish_valid | state_1_2 & _mshrs_2_io_mem_finish_valid | state_1_3 & _mshrs_3_io_mem_finish_valid : _sink_ACancel_earlyValid_T_14 | _mshrs_2_io_mem_finish_valid | _mshrs_3_io_mem_finish_valid;	// @[Arbiter.scala:88:30, :108:36, :117:26, :126:{29,56}, Mux.scala:27:73, NBDcache.scala:367:22]
  assign _io_req_ready_output = io_req_bits_addr[31] ? sdq_rdy & (idx_match ? tag_match & (_mshrs_0_io_req_sec_rdy | _mshrs_1_io_req_sec_rdy | _mshrs_2_io_req_sec_rdy | _mshrs_3_io_req_sec_rdy) : _mshrs_0_io_req_pri_rdy | _mshrs_1_io_req_pri_rdy | _mshrs_2_io_req_pri_rdy | _mshrs_3_io_req_pri_rdy) : _mmios_0_io_req_ready;	// @[NBDcache.scala:341:26, :348:44, :367:22, :392:23, :393:23, :394:27, :418:22, :443:22, :445:{29,35,57}]
  wire [3:0][3:0] _GEN_5 = {{_mshrs_3_io_refill_way_en}, {_mshrs_2_io_refill_way_en}, {_mshrs_1_io_refill_way_en}, {_mshrs_0_io_refill_way_en}};	// @[NBDcache.scala:367:22, :447:13]
  wire [3:0][9:0] _GEN_6 = {{_mshrs_3_io_refill_addr}, {_mshrs_2_io_refill_addr}, {_mshrs_1_io_refill_addr}, {_mshrs_0_io_refill_addr}};	// @[NBDcache.scala:367:22, :447:13]
  reg  [4:0]      io_replay_bits_data_r;	// @[Reg.scala:19:16]
  wire [16:0]     _sdq_val_T_7 = ~sdq_val;	// @[NBDcache.scala:339:24, :456:34]
  wire [31:0]     _sdq_val_T = 32'h1 << _replay_arb_io_out_bits_sdq_id;	// @[NBDcache.scala:355:26, OneHot.scala:57:35]
  wire [26:0]     _decode_T_17 = 27'hFFF << _mmios_0_io_mem_access_bits_size;	// @[NBDcache.scala:418:22, package.scala:235:71]
  wire            winnerQual_4 = ~_GEN_1 & _mmios_0_io_mem_access_valid;	// @[Arbiter.scala:17:61, :99:79, NBDcache.scala:418:22, package.scala:245:43]
  wire            free_sdq = io_replay_ready & _replay_arb_io_out_valid & (_replay_arb_io_out_bits_cmd == 5'h1 | _replay_arb_io_out_bits_cmd == 5'h11 | _replay_arb_io_out_bits_cmd == 5'h7 | _replay_arb_io_out_bits_cmd == 5'h4 | _replay_arb_io_out_bits_cmd == 5'h9 | _replay_arb_io_out_bits_cmd == 5'hA | _replay_arb_io_out_bits_cmd == 5'hB | _replay_arb_io_out_bits_cmd == 5'h8 | _replay_arb_io_out_bits_cmd == 5'hC | _replay_arb_io_out_bits_cmd == 5'hD | _replay_arb_io_out_bits_cmd == 5'hE | _replay_arb_io_out_bits_cmd == 5'hF);	// @[Consts.scala:86:{32,49,66,76}, Mux.scala:47:70, NBDcache.scala:355:26, :449:33, package.scala:16:47]
  always @(posedge clock) begin
    if (reset) begin
      sdq_val <= 17'h0;	// @[NBDcache.scala:339:24]
      beatsLeft <= 9'h0;	// @[Arbiter.scala:88:30, :113:44]
      state_0 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_1 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_2 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_3 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_4 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      beatsLeft_1 <= 1'h0;	// @[Arbiter.scala:88:30, ReadyValidCancel.scala:68:19]
      state_1_0 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_1_1 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_1_2 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
      state_1_3 <= 1'h0;	// @[Arbiter.scala:117:26, ReadyValidCancel.scala:68:19]
    end
    else begin
      if (_replay_arb_io_out_valid | sdq_enq)	// @[NBDcache.scala:342:59, :355:26, :454:25]
        sdq_val <= sdq_val & ~(_sdq_val_T[16:0] & {17{free_sdq}}) | (_sdq_val_T_7[0] ? 17'h1 : _sdq_val_T_7[1] ? 17'h2 : _sdq_val_T_7[2] ? 17'h4 : _sdq_val_T_7[3] ? 17'h8 : _sdq_val_T_7[4] ? 17'h10 : _sdq_val_T_7[5] ? 17'h20 : _sdq_val_T_7[6] ? 17'h40 : _sdq_val_T_7[7] ? 17'h80 : _sdq_val_T_7[8] ? 17'h100 : _sdq_val_T_7[9] ? 17'h200 : _sdq_val_T_7[10] ? 17'h400 : _sdq_val_T_7[11] ? 17'h800 : _sdq_val_T_7[12] ? 17'h1000 : _sdq_val_T_7[13] ? 17'h2000 : _sdq_val_T_7[14] ? 17'h4000 : _sdq_val_T_7[15] ? 17'h8000 : {_sdq_val_T_7[16], 16'h0}) & {17{sdq_enq}};	// @[Bitwise.scala:77:12, Mux.scala:47:70, NBDcache.scala:339:24, :342:59, :449:33, :455:{24,26,68,96}, :456:{34,58}, OneHot.scala:57:35, :84:71]
      if (idle & io_mem_acquire_ready) begin	// @[Arbiter.scala:89:28, :90:24]
        if (winnerQual_4 & ~(_mmios_0_io_mem_access_bits_opcode[2]))	// @[Arbiter.scala:99:79, :112:73, Edges.scala:92:{28,37}, :221:14, NBDcache.scala:418:22]
          beatsLeft <= ~(_decode_T_17[11:3]);	// @[Arbiter.scala:88:30, package.scala:235:{46,71,76}]
        else	// @[Arbiter.scala:112:73, Edges.scala:221:14]
          beatsLeft <= 9'h0;	// @[Arbiter.scala:88:30, :113:44]
      end
      else	// @[Arbiter.scala:90:24]
        beatsLeft <= beatsLeft - {8'h0, io_mem_acquire_ready & out_5_valid};	// @[Arbiter.scala:88:30, :114:52, :126:29, Mux.scala:27:73, ReadyValidCancel.scala:49:33]
      if (idle) begin	// @[Arbiter.scala:89:28]
        state_0 <= _mshrs_0_io_mem_acquire_valid;	// @[Arbiter.scala:117:26, NBDcache.scala:367:22]
        state_1 <= ~_mshrs_0_io_mem_acquire_valid & _mshrs_1_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22]
        state_2 <= ~_GEN_0 & _mshrs_2_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22, package.scala:245:43]
        state_3 <= ~_GEN_2 & _mshrs_3_io_mem_acquire_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22, package.scala:245:43]
        state_4 <= winnerQual_4;	// @[Arbiter.scala:99:79, :117:26]
      end
      beatsLeft_1 <= ~(~beatsLeft_1 & io_mem_finish_ready) & beatsLeft_1 - (io_mem_finish_ready & out_10_valid);	// @[Arbiter.scala:88:30, :89:28, :90:24, :114:{23,52}, :126:29, ReadyValidCancel.scala:49:33]
      if (beatsLeft_1) begin	// @[Arbiter.scala:88:30]
      end
      else begin	// @[Arbiter.scala:88:30]
        state_1_0 <= _mshrs_0_io_mem_finish_valid;	// @[Arbiter.scala:117:26, NBDcache.scala:367:22]
        state_1_1 <= ~_mshrs_0_io_mem_finish_valid & _mshrs_1_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22]
        state_1_2 <= ~_GEN_3 & _mshrs_2_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22, package.scala:245:43]
        state_1_3 <= ~_GEN_4 & _mshrs_3_io_mem_finish_valid;	// @[Arbiter.scala:17:61, :99:79, :117:26, NBDcache.scala:367:22, package.scala:245:43]
      end
    end
    if (free_sdq)	// @[NBDcache.scala:449:33]
      io_replay_bits_data_r <= _replay_arb_io_out_bits_sdq_id;	// @[NBDcache.scala:355:26, Reg.scala:19:16]
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire         prefixOR_2 = _mshrs_0_io_mem_acquire_valid | earlyWinner_1;	// @[Arbiter.scala:98:79, :105:53, NBDcache.scala:367:22]
    wire         prefixOR_3 = prefixOR_2 | earlyWinner_2;	// @[Arbiter.scala:98:79, :105:53]
    wire         _T_63 = _mshrs_0_io_mem_acquire_valid | _mshrs_1_io_mem_acquire_valid;	// @[Arbiter.scala:109:36, NBDcache.scala:367:22]
    wire         prefixOR_2_1 = _mshrs_0_io_mem_finish_valid | earlyWinner_1_1;	// @[Arbiter.scala:98:79, :105:53, NBDcache.scala:367:22]
    wire         _T_176 = _mshrs_0_io_mem_finish_valid | _mshrs_1_io_mem_finish_valid;	// @[Arbiter.scala:109:36, NBDcache.scala:367:22]
    always @(posedge clock) begin	// @[Arbiter.scala:106:13]
      if (~reset & ~((~_mshrs_0_io_mem_acquire_valid | ~earlyWinner_1) & (~prefixOR_2 | ~earlyWinner_2) & (~prefixOR_3 | ~earlyWinner_3) & (~(prefixOR_3 | earlyWinner_3) | ~earlyWinner_4))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}, NBDcache.scala:367:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T | _mshrs_2_io_mem_acquire_valid | _mshrs_3_io_mem_acquire_valid | _mmios_0_io_mem_access_valid) | _mshrs_0_io_mem_acquire_valid | earlyWinner_1 | earlyWinner_2 | earlyWinner_3 | earlyWinner_4)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, NBDcache.scala:367:22, :418:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_63 | _mshrs_2_io_mem_acquire_valid | _mshrs_3_io_mem_acquire_valid | _mmios_0_io_mem_access_valid) | _T_63 | _mshrs_2_io_mem_acquire_valid | _mshrs_3_io_mem_acquire_valid | _mmios_0_io_mem_access_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, NBDcache.scala:367:22, :418:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
      if (~reset & ~((~_mshrs_0_io_mem_finish_valid | ~earlyWinner_1_1) & (~prefixOR_2_1 | ~earlyWinner_1_2) & (~(prefixOR_2_1 | earlyWinner_1_2) | ~earlyWinner_1_3))) begin	// @[Arbiter.scala:98:79, :105:53, :106:{13,61,64,67,82}, NBDcache.scala:367:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:106:13]
          $error("Assertion failed\n    at Arbiter.scala:106 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n");	// @[Arbiter.scala:106:13]
        if (`STOP_COND_)	// @[Arbiter.scala:106:13]
          $fatal;	// @[Arbiter.scala:106:13]
      end
      if (~reset & ~(~(_sink_ACancel_earlyValid_T_14 | _mshrs_2_io_mem_finish_valid | _mshrs_3_io_mem_finish_valid) | _mshrs_0_io_mem_finish_valid | earlyWinner_1_1 | earlyWinner_1_2 | earlyWinner_1_3)) begin	// @[Arbiter.scala:98:79, :108:{14,15,36,41}, NBDcache.scala:367:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:108:14]
          $error("Assertion failed\n    at Arbiter.scala:108 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n");	// @[Arbiter.scala:108:14]
        if (`STOP_COND_)	// @[Arbiter.scala:108:14]
          $fatal;	// @[Arbiter.scala:108:14]
      end
      if (~reset & ~(~(_T_176 | _mshrs_2_io_mem_finish_valid | _mshrs_3_io_mem_finish_valid) | _T_176 | _mshrs_2_io_mem_finish_valid | _mshrs_3_io_mem_finish_valid)) begin	// @[Arbiter.scala:109:{14,15,36,41}, NBDcache.scala:367:22]
        if (`ASSERT_VERBOSE_COND_)	// @[Arbiter.scala:109:14]
          $error("Assertion failed\n    at Arbiter.scala:109 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n");	// @[Arbiter.scala:109:14]
        if (`STOP_COND_)	// @[Arbiter.scala:109:14]
          $fatal;	// @[Arbiter.scala:109:14]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        sdq_val = _RANDOM_0[16:0];	// @[NBDcache.scala:339:24]
        beatsLeft = _RANDOM_0[25:17];	// @[Arbiter.scala:88:30, NBDcache.scala:339:24]
        state_0 = _RANDOM_0[26];	// @[Arbiter.scala:117:26, NBDcache.scala:339:24]
        state_1 = _RANDOM_0[27];	// @[Arbiter.scala:117:26, NBDcache.scala:339:24]
        state_2 = _RANDOM_0[28];	// @[Arbiter.scala:117:26, NBDcache.scala:339:24]
        state_3 = _RANDOM_0[29];	// @[Arbiter.scala:117:26, NBDcache.scala:339:24]
        state_4 = _RANDOM_0[30];	// @[Arbiter.scala:117:26, NBDcache.scala:339:24]
        beatsLeft_1 = _RANDOM_0[31];	// @[Arbiter.scala:88:30, NBDcache.scala:339:24]
        state_1_0 = _RANDOM_1[0];	// @[Arbiter.scala:117:26]
        state_1_1 = _RANDOM_1[1];	// @[Arbiter.scala:117:26]
        state_1_2 = _RANDOM_1[2];	// @[Arbiter.scala:117:26]
        state_1_3 = _RANDOM_1[3];	// @[Arbiter.scala:117:26]
        io_replay_bits_data_r = _RANDOM_1[8:4];	// @[Arbiter.scala:117:26, Reg.scala:19:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  sdq_combMem sdq_ext (	// @[NBDcache.scala:343:16]
    .R0_addr (io_replay_bits_data_r),	// @[Reg.scala:19:16]
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .W0_addr (sdq_alloc_id),	// @[Mux.scala:47:70]
    .W0_en   (sdq_enq),	// @[NBDcache.scala:342:59]
    .W0_clk  (clock),
    .W0_data (io_req_bits_data),
    .R0_data (io_replay_bits_data)
  );
  Arbiter meta_read_arb (	// @[NBDcache.scala:352:29]
    .io_in_0_valid    (_mshrs_0_io_meta_read_valid),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_idx (_mshrs_0_io_meta_read_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_1_valid    (_mshrs_1_io_meta_read_valid),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_idx (_mshrs_1_io_meta_read_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_2_valid    (_mshrs_2_io_meta_read_valid),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_idx (_mshrs_2_io_meta_read_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_3_valid    (_mshrs_3_io_meta_read_valid),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_idx (_mshrs_3_io_meta_read_bits_idx),	// @[NBDcache.scala:367:22]
    .io_out_ready     (io_meta_read_ready),
    .io_in_0_ready    (_meta_read_arb_io_in_0_ready),
    .io_in_1_ready    (_meta_read_arb_io_in_1_ready),
    .io_in_2_ready    (_meta_read_arb_io_in_2_ready),
    .io_in_3_ready    (_meta_read_arb_io_in_3_ready),
    .io_out_valid     (io_meta_read_valid),
    .io_out_bits_idx  (io_meta_read_bits_idx)
  );
  Arbiter_1 meta_write_arb (	// @[NBDcache.scala:353:30]
    .io_in_0_valid               (_mshrs_0_io_meta_write_valid),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_idx            (_mshrs_0_io_meta_write_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_way_en         (_mshrs_0_io_meta_write_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_data_coh_state (_mshrs_0_io_meta_write_bits_data_coh_state),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_data_tag       (_mshrs_0_io_meta_write_bits_data_tag),	// @[NBDcache.scala:367:22]
    .io_in_1_valid               (_mshrs_1_io_meta_write_valid),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_idx            (_mshrs_1_io_meta_write_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_way_en         (_mshrs_1_io_meta_write_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_data_coh_state (_mshrs_1_io_meta_write_bits_data_coh_state),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_data_tag       (_mshrs_1_io_meta_write_bits_data_tag),	// @[NBDcache.scala:367:22]
    .io_in_2_valid               (_mshrs_2_io_meta_write_valid),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_idx            (_mshrs_2_io_meta_write_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_way_en         (_mshrs_2_io_meta_write_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_data_coh_state (_mshrs_2_io_meta_write_bits_data_coh_state),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_data_tag       (_mshrs_2_io_meta_write_bits_data_tag),	// @[NBDcache.scala:367:22]
    .io_in_3_valid               (_mshrs_3_io_meta_write_valid),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_idx            (_mshrs_3_io_meta_write_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_way_en         (_mshrs_3_io_meta_write_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_data_coh_state (_mshrs_3_io_meta_write_bits_data_coh_state),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_data_tag       (_mshrs_3_io_meta_write_bits_data_tag),	// @[NBDcache.scala:367:22]
    .io_out_ready                (io_meta_write_ready),
    .io_in_0_ready               (_meta_write_arb_io_in_0_ready),
    .io_in_1_ready               (_meta_write_arb_io_in_1_ready),
    .io_in_2_ready               (_meta_write_arb_io_in_2_ready),
    .io_in_3_ready               (_meta_write_arb_io_in_3_ready),
    .io_out_valid                (io_meta_write_valid),
    .io_out_bits_idx             (io_meta_write_bits_idx),
    .io_out_bits_way_en          (io_meta_write_bits_way_en),
    .io_out_bits_data_coh_state  (io_meta_write_bits_data_coh_state),
    .io_out_bits_data_tag        (io_meta_write_bits_data_tag)
  );
  Arbiter_2 wb_req_arb (	// @[NBDcache.scala:354:26]
    .io_in_0_valid       (_mshrs_0_io_wb_req_valid),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_tag    (_mshrs_0_io_wb_req_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_idx    (_mshrs_0_io_wb_req_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_param  (_mshrs_0_io_wb_req_bits_param),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_way_en (_mshrs_0_io_wb_req_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_1_valid       (_mshrs_1_io_wb_req_valid),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_tag    (_mshrs_1_io_wb_req_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_idx    (_mshrs_1_io_wb_req_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_param  (_mshrs_1_io_wb_req_bits_param),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_way_en (_mshrs_1_io_wb_req_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_2_valid       (_mshrs_2_io_wb_req_valid),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_tag    (_mshrs_2_io_wb_req_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_idx    (_mshrs_2_io_wb_req_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_param  (_mshrs_2_io_wb_req_bits_param),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_way_en (_mshrs_2_io_wb_req_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_in_3_valid       (_mshrs_3_io_wb_req_valid),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_tag    (_mshrs_3_io_wb_req_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_idx    (_mshrs_3_io_wb_req_bits_idx),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_param  (_mshrs_3_io_wb_req_bits_param),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_way_en (_mshrs_3_io_wb_req_bits_way_en),	// @[NBDcache.scala:367:22]
    .io_out_ready        (io_wb_req_ready),
    .io_in_0_ready       (_wb_req_arb_io_in_0_ready),
    .io_in_1_ready       (_wb_req_arb_io_in_1_ready),
    .io_in_2_ready       (_wb_req_arb_io_in_2_ready),
    .io_in_3_ready       (_wb_req_arb_io_in_3_ready),
    .io_out_valid        (io_wb_req_valid),
    .io_out_bits_tag     (io_wb_req_bits_tag),
    .io_out_bits_idx     (io_wb_req_bits_idx),
    .io_out_bits_source  (io_wb_req_bits_source),
    .io_out_bits_param   (io_wb_req_bits_param),
    .io_out_bits_way_en  (io_wb_req_bits_way_en)
  );
  Arbiter_3 replay_arb (	// @[NBDcache.scala:355:26]
    .io_in_0_valid       (_mshrs_0_io_replay_valid),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_addr   (_mshrs_0_io_replay_bits_addr),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_tag    (_mshrs_0_io_replay_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_cmd    (_mshrs_0_io_replay_bits_cmd),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_size   (_mshrs_0_io_replay_bits_size),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_signed (_mshrs_0_io_replay_bits_signed),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_dprv   (_mshrs_0_io_replay_bits_dprv),	// @[NBDcache.scala:367:22]
    .io_in_0_bits_sdq_id (_mshrs_0_io_replay_bits_sdq_id),	// @[NBDcache.scala:367:22]
    .io_in_1_valid       (_mshrs_1_io_replay_valid),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_addr   (_mshrs_1_io_replay_bits_addr),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_tag    (_mshrs_1_io_replay_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_cmd    (_mshrs_1_io_replay_bits_cmd),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_size   (_mshrs_1_io_replay_bits_size),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_signed (_mshrs_1_io_replay_bits_signed),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_dprv   (_mshrs_1_io_replay_bits_dprv),	// @[NBDcache.scala:367:22]
    .io_in_1_bits_sdq_id (_mshrs_1_io_replay_bits_sdq_id),	// @[NBDcache.scala:367:22]
    .io_in_2_valid       (_mshrs_2_io_replay_valid),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_addr   (_mshrs_2_io_replay_bits_addr),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_tag    (_mshrs_2_io_replay_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_cmd    (_mshrs_2_io_replay_bits_cmd),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_size   (_mshrs_2_io_replay_bits_size),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_signed (_mshrs_2_io_replay_bits_signed),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_dprv   (_mshrs_2_io_replay_bits_dprv),	// @[NBDcache.scala:367:22]
    .io_in_2_bits_sdq_id (_mshrs_2_io_replay_bits_sdq_id),	// @[NBDcache.scala:367:22]
    .io_in_3_valid       (_mshrs_3_io_replay_valid),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_addr   (_mshrs_3_io_replay_bits_addr),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_tag    (_mshrs_3_io_replay_bits_tag),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_cmd    (_mshrs_3_io_replay_bits_cmd),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_size   (_mshrs_3_io_replay_bits_size),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_signed (_mshrs_3_io_replay_bits_signed),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_dprv   (_mshrs_3_io_replay_bits_dprv),	// @[NBDcache.scala:367:22]
    .io_in_3_bits_sdq_id (_mshrs_3_io_replay_bits_sdq_id),	// @[NBDcache.scala:367:22]
    .io_out_ready        (io_replay_ready),
    .io_in_0_ready       (_replay_arb_io_in_0_ready),
    .io_in_1_ready       (_replay_arb_io_in_1_ready),
    .io_in_2_ready       (_replay_arb_io_in_2_ready),
    .io_in_3_ready       (_replay_arb_io_in_3_ready),
    .io_out_valid        (_replay_arb_io_out_valid),
    .io_out_bits_addr    (io_replay_bits_addr),
    .io_out_bits_tag     (io_replay_bits_tag),
    .io_out_bits_cmd     (_replay_arb_io_out_bits_cmd),
    .io_out_bits_size    (io_replay_bits_size),
    .io_out_bits_signed  (io_replay_bits_signed),
    .io_out_bits_dprv    (io_replay_bits_dprv),
    .io_out_bits_sdq_id  (_replay_arb_io_out_bits_sdq_id)
  );
  Arbiter_4 alloc_arb (	// @[NBDcache.scala:356:25]
    .io_in_0_valid (_mshrs_0_io_req_pri_rdy),	// @[NBDcache.scala:367:22]
    .io_in_1_valid (_mshrs_1_io_req_pri_rdy),	// @[NBDcache.scala:367:22]
    .io_in_2_valid (_mshrs_2_io_req_pri_rdy),	// @[NBDcache.scala:367:22]
    .io_out_ready  (_alloc_arb_io_out_ready_T & io_req_bits_addr[31] & ~idx_match),	// @[NBDcache.scala:376:41, :394:27, :403:{66,69}]
    .io_in_0_ready (_alloc_arb_io_in_0_ready),
    .io_in_1_ready (_alloc_arb_io_in_1_ready),
    .io_in_2_ready (_alloc_arb_io_in_2_ready),
    .io_in_3_ready (_alloc_arb_io_in_3_ready)
  );
  MSHR_7 mshrs_0 (	// @[NBDcache.scala:367:22]
    .clock                             (clock),
    .reset                             (reset),
    .io_req_pri_val                    (_alloc_arb_io_in_0_ready),	// @[NBDcache.scala:356:25]
    .io_req_sec_val                    (_alloc_arb_io_out_ready_T & tag_match),	// @[NBDcache.scala:348:44, :376:{41,52}]
    .io_req_bits_addr                  (io_req_bits_addr),
    .io_req_bits_tag                   (io_req_bits_tag),
    .io_req_bits_cmd                   (io_req_bits_cmd),
    .io_req_bits_size                  (io_req_bits_size),
    .io_req_bits_signed                (io_req_bits_signed),
    .io_req_bits_dprv                  (io_req_bits_dprv),
    .io_req_bits_dv                    (io_req_bits_dv),
    .io_req_bits_phys                  (io_req_bits_phys),
    .io_req_bits_no_alloc              (io_req_bits_no_alloc),
    .io_req_bits_no_xcpt               (io_req_bits_no_xcpt),
    .io_req_bits_sdq_id                (sdq_alloc_id),	// @[Mux.scala:47:70]
    .io_req_bits_tag_match             (io_req_bits_tag_match),
    .io_req_bits_old_meta_coh_state    (io_req_bits_old_meta_coh_state),
    .io_req_bits_old_meta_tag          (io_req_bits_old_meta_tag),
    .io_req_bits_way_en                (io_req_bits_way_en),
    .io_mem_acquire_ready              (io_mem_acquire_ready & (idle | state_0)),	// @[Arbiter.scala:89:28, :117:26, :122:24, :124:31]
    .io_mem_grant_valid                (io_mem_grant_valid & io_mem_grant_bits_source == 3'h0),	// @[NBDcache.scala:388:{51,79}, ReadyValidCancel.scala:68:19]
    .io_mem_grant_bits_opcode          (io_mem_grant_bits_opcode),
    .io_mem_grant_bits_param           (io_mem_grant_bits_param),
    .io_mem_grant_bits_size            (io_mem_grant_bits_size),
    .io_mem_grant_bits_sink            (io_mem_grant_bits_sink),
    .io_mem_finish_ready               (io_mem_finish_ready & (~beatsLeft_1 | state_1_0)),	// @[Arbiter.scala:88:30, :89:28, :117:26, :122:24, :124:31]
    .io_meta_read_ready                (_meta_read_arb_io_in_0_ready),	// @[NBDcache.scala:352:29]
    .io_meta_write_ready               (_meta_write_arb_io_in_0_ready),	// @[NBDcache.scala:353:30]
    .io_replay_ready                   (_replay_arb_io_in_0_ready),	// @[NBDcache.scala:355:26]
    .io_wb_req_ready                   (_wb_req_arb_io_in_0_ready),	// @[NBDcache.scala:354:26]
    .io_req_pri_rdy                    (_mshrs_0_io_req_pri_rdy),
    .io_req_sec_rdy                    (_mshrs_0_io_req_sec_rdy),
    .io_idx_match                      (_mshrs_0_io_idx_match),
    .io_tag                            (_mshrs_0_io_tag),
    .io_mem_acquire_valid              (_mshrs_0_io_mem_acquire_valid),
    .io_mem_acquire_bits_param         (_mshrs_0_io_mem_acquire_bits_param),
    .io_mem_acquire_bits_address       (_mshrs_0_io_mem_acquire_bits_address),
    .io_mem_finish_valid               (_mshrs_0_io_mem_finish_valid),
    .io_mem_finish_bits_sink           (_mshrs_0_io_mem_finish_bits_sink),
    .io_refill_way_en                  (_mshrs_0_io_refill_way_en),
    .io_refill_addr                    (_mshrs_0_io_refill_addr),
    .io_meta_read_valid                (_mshrs_0_io_meta_read_valid),
    .io_meta_read_bits_idx             (_mshrs_0_io_meta_read_bits_idx),
    .io_meta_write_valid               (_mshrs_0_io_meta_write_valid),
    .io_meta_write_bits_idx            (_mshrs_0_io_meta_write_bits_idx),
    .io_meta_write_bits_way_en         (_mshrs_0_io_meta_write_bits_way_en),
    .io_meta_write_bits_data_coh_state (_mshrs_0_io_meta_write_bits_data_coh_state),
    .io_meta_write_bits_data_tag       (_mshrs_0_io_meta_write_bits_data_tag),
    .io_replay_valid                   (_mshrs_0_io_replay_valid),
    .io_replay_bits_addr               (_mshrs_0_io_replay_bits_addr),
    .io_replay_bits_tag                (_mshrs_0_io_replay_bits_tag),
    .io_replay_bits_cmd                (_mshrs_0_io_replay_bits_cmd),
    .io_replay_bits_size               (_mshrs_0_io_replay_bits_size),
    .io_replay_bits_signed             (_mshrs_0_io_replay_bits_signed),
    .io_replay_bits_dprv               (_mshrs_0_io_replay_bits_dprv),
    .io_replay_bits_sdq_id             (_mshrs_0_io_replay_bits_sdq_id),
    .io_wb_req_valid                   (_mshrs_0_io_wb_req_valid),
    .io_wb_req_bits_tag                (_mshrs_0_io_wb_req_bits_tag),
    .io_wb_req_bits_idx                (_mshrs_0_io_wb_req_bits_idx),
    .io_wb_req_bits_param              (_mshrs_0_io_wb_req_bits_param),
    .io_wb_req_bits_way_en             (_mshrs_0_io_wb_req_bits_way_en),
    .io_probe_rdy                      (_mshrs_0_io_probe_rdy)
  );
  MSHR_8 mshrs_1 (	// @[NBDcache.scala:367:22]
    .clock                             (clock),
    .reset                             (reset),
    .io_req_pri_val                    (_alloc_arb_io_in_1_ready),	// @[NBDcache.scala:356:25]
    .io_req_sec_val                    (_alloc_arb_io_out_ready_T & tag_match),	// @[NBDcache.scala:348:44, :376:{41,52}]
    .io_req_bits_addr                  (io_req_bits_addr),
    .io_req_bits_tag                   (io_req_bits_tag),
    .io_req_bits_cmd                   (io_req_bits_cmd),
    .io_req_bits_size                  (io_req_bits_size),
    .io_req_bits_signed                (io_req_bits_signed),
    .io_req_bits_dprv                  (io_req_bits_dprv),
    .io_req_bits_dv                    (io_req_bits_dv),
    .io_req_bits_phys                  (io_req_bits_phys),
    .io_req_bits_no_alloc              (io_req_bits_no_alloc),
    .io_req_bits_no_xcpt               (io_req_bits_no_xcpt),
    .io_req_bits_sdq_id                (sdq_alloc_id),	// @[Mux.scala:47:70]
    .io_req_bits_tag_match             (io_req_bits_tag_match),
    .io_req_bits_old_meta_coh_state    (io_req_bits_old_meta_coh_state),
    .io_req_bits_old_meta_tag          (io_req_bits_old_meta_tag),
    .io_req_bits_way_en                (io_req_bits_way_en),
    .io_mem_acquire_ready              (io_mem_acquire_ready & (idle ? ~_mshrs_0_io_mem_acquire_valid : state_1)),	// @[Arbiter.scala:17:61, :89:28, :117:26, :122:24, :124:31, NBDcache.scala:367:22]
    .io_mem_grant_valid                (io_mem_grant_valid & io_mem_grant_bits_source == 3'h1),	// @[NBDcache.scala:388:{51,79}, ReadyValidCancel.scala:68:19]
    .io_mem_grant_bits_opcode          (io_mem_grant_bits_opcode),
    .io_mem_grant_bits_param           (io_mem_grant_bits_param),
    .io_mem_grant_bits_size            (io_mem_grant_bits_size),
    .io_mem_grant_bits_sink            (io_mem_grant_bits_sink),
    .io_mem_finish_ready               (io_mem_finish_ready & (beatsLeft_1 ? state_1_1 : ~_mshrs_0_io_mem_finish_valid)),	// @[Arbiter.scala:17:61, :88:30, :117:26, :122:24, :124:31, NBDcache.scala:367:22]
    .io_meta_read_ready                (_meta_read_arb_io_in_1_ready),	// @[NBDcache.scala:352:29]
    .io_meta_write_ready               (_meta_write_arb_io_in_1_ready),	// @[NBDcache.scala:353:30]
    .io_replay_ready                   (_replay_arb_io_in_1_ready),	// @[NBDcache.scala:355:26]
    .io_wb_req_ready                   (_wb_req_arb_io_in_1_ready),	// @[NBDcache.scala:354:26]
    .io_req_pri_rdy                    (_mshrs_1_io_req_pri_rdy),
    .io_req_sec_rdy                    (_mshrs_1_io_req_sec_rdy),
    .io_idx_match                      (_mshrs_1_io_idx_match),
    .io_tag                            (_mshrs_1_io_tag),
    .io_mem_acquire_valid              (_mshrs_1_io_mem_acquire_valid),
    .io_mem_acquire_bits_param         (_mshrs_1_io_mem_acquire_bits_param),
    .io_mem_acquire_bits_address       (_mshrs_1_io_mem_acquire_bits_address),
    .io_mem_finish_valid               (_mshrs_1_io_mem_finish_valid),
    .io_mem_finish_bits_sink           (_mshrs_1_io_mem_finish_bits_sink),
    .io_refill_way_en                  (_mshrs_1_io_refill_way_en),
    .io_refill_addr                    (_mshrs_1_io_refill_addr),
    .io_meta_read_valid                (_mshrs_1_io_meta_read_valid),
    .io_meta_read_bits_idx             (_mshrs_1_io_meta_read_bits_idx),
    .io_meta_write_valid               (_mshrs_1_io_meta_write_valid),
    .io_meta_write_bits_idx            (_mshrs_1_io_meta_write_bits_idx),
    .io_meta_write_bits_way_en         (_mshrs_1_io_meta_write_bits_way_en),
    .io_meta_write_bits_data_coh_state (_mshrs_1_io_meta_write_bits_data_coh_state),
    .io_meta_write_bits_data_tag       (_mshrs_1_io_meta_write_bits_data_tag),
    .io_replay_valid                   (_mshrs_1_io_replay_valid),
    .io_replay_bits_addr               (_mshrs_1_io_replay_bits_addr),
    .io_replay_bits_tag                (_mshrs_1_io_replay_bits_tag),
    .io_replay_bits_cmd                (_mshrs_1_io_replay_bits_cmd),
    .io_replay_bits_size               (_mshrs_1_io_replay_bits_size),
    .io_replay_bits_signed             (_mshrs_1_io_replay_bits_signed),
    .io_replay_bits_dprv               (_mshrs_1_io_replay_bits_dprv),
    .io_replay_bits_sdq_id             (_mshrs_1_io_replay_bits_sdq_id),
    .io_wb_req_valid                   (_mshrs_1_io_wb_req_valid),
    .io_wb_req_bits_tag                (_mshrs_1_io_wb_req_bits_tag),
    .io_wb_req_bits_idx                (_mshrs_1_io_wb_req_bits_idx),
    .io_wb_req_bits_param              (_mshrs_1_io_wb_req_bits_param),
    .io_wb_req_bits_way_en             (_mshrs_1_io_wb_req_bits_way_en),
    .io_probe_rdy                      (_mshrs_1_io_probe_rdy)
  );
  MSHR_9 mshrs_2 (	// @[NBDcache.scala:367:22]
    .clock                             (clock),
    .reset                             (reset),
    .io_req_pri_val                    (_alloc_arb_io_in_2_ready),	// @[NBDcache.scala:356:25]
    .io_req_sec_val                    (_alloc_arb_io_out_ready_T & tag_match),	// @[NBDcache.scala:348:44, :376:{41,52}]
    .io_req_bits_addr                  (io_req_bits_addr),
    .io_req_bits_tag                   (io_req_bits_tag),
    .io_req_bits_cmd                   (io_req_bits_cmd),
    .io_req_bits_size                  (io_req_bits_size),
    .io_req_bits_signed                (io_req_bits_signed),
    .io_req_bits_dprv                  (io_req_bits_dprv),
    .io_req_bits_dv                    (io_req_bits_dv),
    .io_req_bits_phys                  (io_req_bits_phys),
    .io_req_bits_no_alloc              (io_req_bits_no_alloc),
    .io_req_bits_no_xcpt               (io_req_bits_no_xcpt),
    .io_req_bits_sdq_id                (sdq_alloc_id),	// @[Mux.scala:47:70]
    .io_req_bits_tag_match             (io_req_bits_tag_match),
    .io_req_bits_old_meta_coh_state    (io_req_bits_old_meta_coh_state),
    .io_req_bits_old_meta_tag          (io_req_bits_old_meta_tag),
    .io_req_bits_way_en                (io_req_bits_way_en),
    .io_mem_acquire_ready              (io_mem_acquire_ready & (idle ? ~_GEN_0 : state_2)),	// @[Arbiter.scala:17:61, :89:28, :117:26, :122:24, :124:31, package.scala:245:43]
    .io_mem_grant_valid                (io_mem_grant_valid & io_mem_grant_bits_source == 3'h2),	// @[NBDcache.scala:388:{51,79}, ReadyValidCancel.scala:68:19]
    .io_mem_grant_bits_opcode          (io_mem_grant_bits_opcode),
    .io_mem_grant_bits_param           (io_mem_grant_bits_param),
    .io_mem_grant_bits_size            (io_mem_grant_bits_size),
    .io_mem_grant_bits_sink            (io_mem_grant_bits_sink),
    .io_mem_finish_ready               (io_mem_finish_ready & (beatsLeft_1 ? state_1_2 : ~_GEN_3)),	// @[Arbiter.scala:17:61, :88:30, :117:26, :122:24, :124:31, package.scala:245:43]
    .io_meta_read_ready                (_meta_read_arb_io_in_2_ready),	// @[NBDcache.scala:352:29]
    .io_meta_write_ready               (_meta_write_arb_io_in_2_ready),	// @[NBDcache.scala:353:30]
    .io_replay_ready                   (_replay_arb_io_in_2_ready),	// @[NBDcache.scala:355:26]
    .io_wb_req_ready                   (_wb_req_arb_io_in_2_ready),	// @[NBDcache.scala:354:26]
    .io_req_pri_rdy                    (_mshrs_2_io_req_pri_rdy),
    .io_req_sec_rdy                    (_mshrs_2_io_req_sec_rdy),
    .io_idx_match                      (_mshrs_2_io_idx_match),
    .io_tag                            (_mshrs_2_io_tag),
    .io_mem_acquire_valid              (_mshrs_2_io_mem_acquire_valid),
    .io_mem_acquire_bits_param         (_mshrs_2_io_mem_acquire_bits_param),
    .io_mem_acquire_bits_address       (_mshrs_2_io_mem_acquire_bits_address),
    .io_mem_finish_valid               (_mshrs_2_io_mem_finish_valid),
    .io_mem_finish_bits_sink           (_mshrs_2_io_mem_finish_bits_sink),
    .io_refill_way_en                  (_mshrs_2_io_refill_way_en),
    .io_refill_addr                    (_mshrs_2_io_refill_addr),
    .io_meta_read_valid                (_mshrs_2_io_meta_read_valid),
    .io_meta_read_bits_idx             (_mshrs_2_io_meta_read_bits_idx),
    .io_meta_write_valid               (_mshrs_2_io_meta_write_valid),
    .io_meta_write_bits_idx            (_mshrs_2_io_meta_write_bits_idx),
    .io_meta_write_bits_way_en         (_mshrs_2_io_meta_write_bits_way_en),
    .io_meta_write_bits_data_coh_state (_mshrs_2_io_meta_write_bits_data_coh_state),
    .io_meta_write_bits_data_tag       (_mshrs_2_io_meta_write_bits_data_tag),
    .io_replay_valid                   (_mshrs_2_io_replay_valid),
    .io_replay_bits_addr               (_mshrs_2_io_replay_bits_addr),
    .io_replay_bits_tag                (_mshrs_2_io_replay_bits_tag),
    .io_replay_bits_cmd                (_mshrs_2_io_replay_bits_cmd),
    .io_replay_bits_size               (_mshrs_2_io_replay_bits_size),
    .io_replay_bits_signed             (_mshrs_2_io_replay_bits_signed),
    .io_replay_bits_dprv               (_mshrs_2_io_replay_bits_dprv),
    .io_replay_bits_sdq_id             (_mshrs_2_io_replay_bits_sdq_id),
    .io_wb_req_valid                   (_mshrs_2_io_wb_req_valid),
    .io_wb_req_bits_tag                (_mshrs_2_io_wb_req_bits_tag),
    .io_wb_req_bits_idx                (_mshrs_2_io_wb_req_bits_idx),
    .io_wb_req_bits_param              (_mshrs_2_io_wb_req_bits_param),
    .io_wb_req_bits_way_en             (_mshrs_2_io_wb_req_bits_way_en),
    .io_probe_rdy                      (_mshrs_2_io_probe_rdy)
  );
  MSHR_10 mshrs_3 (	// @[NBDcache.scala:367:22]
    .clock                             (clock),
    .reset                             (reset),
    .io_req_pri_val                    (_alloc_arb_io_in_3_ready),	// @[NBDcache.scala:356:25]
    .io_req_sec_val                    (_alloc_arb_io_out_ready_T & tag_match),	// @[NBDcache.scala:348:44, :376:{41,52}]
    .io_req_bits_addr                  (io_req_bits_addr),
    .io_req_bits_tag                   (io_req_bits_tag),
    .io_req_bits_cmd                   (io_req_bits_cmd),
    .io_req_bits_size                  (io_req_bits_size),
    .io_req_bits_signed                (io_req_bits_signed),
    .io_req_bits_dprv                  (io_req_bits_dprv),
    .io_req_bits_dv                    (io_req_bits_dv),
    .io_req_bits_phys                  (io_req_bits_phys),
    .io_req_bits_no_alloc              (io_req_bits_no_alloc),
    .io_req_bits_no_xcpt               (io_req_bits_no_xcpt),
    .io_req_bits_sdq_id                (sdq_alloc_id),	// @[Mux.scala:47:70]
    .io_req_bits_tag_match             (io_req_bits_tag_match),
    .io_req_bits_old_meta_coh_state    (io_req_bits_old_meta_coh_state),
    .io_req_bits_old_meta_tag          (io_req_bits_old_meta_tag),
    .io_req_bits_way_en                (io_req_bits_way_en),
    .io_mem_acquire_ready              (io_mem_acquire_ready & (idle ? ~_GEN_2 : state_3)),	// @[Arbiter.scala:17:61, :89:28, :117:26, :122:24, :124:31, package.scala:245:43]
    .io_mem_grant_valid                (io_mem_grant_valid & io_mem_grant_bits_source == 3'h3),	// @[NBDcache.scala:388:{51,79}, ReadyValidCancel.scala:68:19]
    .io_mem_grant_bits_opcode          (io_mem_grant_bits_opcode),
    .io_mem_grant_bits_param           (io_mem_grant_bits_param),
    .io_mem_grant_bits_size            (io_mem_grant_bits_size),
    .io_mem_grant_bits_sink            (io_mem_grant_bits_sink),
    .io_mem_finish_ready               (io_mem_finish_ready & (beatsLeft_1 ? state_1_3 : ~_GEN_4)),	// @[Arbiter.scala:17:61, :88:30, :117:26, :122:24, :124:31, package.scala:245:43]
    .io_meta_read_ready                (_meta_read_arb_io_in_3_ready),	// @[NBDcache.scala:352:29]
    .io_meta_write_ready               (_meta_write_arb_io_in_3_ready),	// @[NBDcache.scala:353:30]
    .io_replay_ready                   (_replay_arb_io_in_3_ready),	// @[NBDcache.scala:355:26]
    .io_wb_req_ready                   (_wb_req_arb_io_in_3_ready),	// @[NBDcache.scala:354:26]
    .io_req_pri_rdy                    (_mshrs_3_io_req_pri_rdy),
    .io_req_sec_rdy                    (_mshrs_3_io_req_sec_rdy),
    .io_idx_match                      (_mshrs_3_io_idx_match),
    .io_tag                            (_mshrs_3_io_tag),
    .io_mem_acquire_valid              (_mshrs_3_io_mem_acquire_valid),
    .io_mem_acquire_bits_param         (_mshrs_3_io_mem_acquire_bits_param),
    .io_mem_acquire_bits_address       (_mshrs_3_io_mem_acquire_bits_address),
    .io_mem_finish_valid               (_mshrs_3_io_mem_finish_valid),
    .io_mem_finish_bits_sink           (_mshrs_3_io_mem_finish_bits_sink),
    .io_refill_way_en                  (_mshrs_3_io_refill_way_en),
    .io_refill_addr                    (_mshrs_3_io_refill_addr),
    .io_meta_read_valid                (_mshrs_3_io_meta_read_valid),
    .io_meta_read_bits_idx             (_mshrs_3_io_meta_read_bits_idx),
    .io_meta_write_valid               (_mshrs_3_io_meta_write_valid),
    .io_meta_write_bits_idx            (_mshrs_3_io_meta_write_bits_idx),
    .io_meta_write_bits_way_en         (_mshrs_3_io_meta_write_bits_way_en),
    .io_meta_write_bits_data_coh_state (_mshrs_3_io_meta_write_bits_data_coh_state),
    .io_meta_write_bits_data_tag       (_mshrs_3_io_meta_write_bits_data_tag),
    .io_replay_valid                   (_mshrs_3_io_replay_valid),
    .io_replay_bits_addr               (_mshrs_3_io_replay_bits_addr),
    .io_replay_bits_tag                (_mshrs_3_io_replay_bits_tag),
    .io_replay_bits_cmd                (_mshrs_3_io_replay_bits_cmd),
    .io_replay_bits_size               (_mshrs_3_io_replay_bits_size),
    .io_replay_bits_signed             (_mshrs_3_io_replay_bits_signed),
    .io_replay_bits_dprv               (_mshrs_3_io_replay_bits_dprv),
    .io_replay_bits_sdq_id             (_mshrs_3_io_replay_bits_sdq_id),
    .io_wb_req_valid                   (_mshrs_3_io_wb_req_valid),
    .io_wb_req_bits_tag                (_mshrs_3_io_wb_req_bits_tag),
    .io_wb_req_bits_idx                (_mshrs_3_io_wb_req_bits_idx),
    .io_wb_req_bits_param              (_mshrs_3_io_wb_req_bits_param),
    .io_wb_req_bits_way_en             (_mshrs_3_io_wb_req_bits_way_en),
    .io_probe_rdy                      (_mshrs_3_io_probe_rdy)
  );
  Arbiter_5 mmio_alloc_arb (	// @[NBDcache.scala:409:30]
    .io_out_ready  (io_req_valid & ~(io_req_bits_addr[31])),	// @[NBDcache.scala:437:47, Parameters.scala:137:31]
    .io_in_0_ready (_mmio_alloc_arb_io_in_0_ready)
  );
  Arbiter_6 resp_arb (	// @[NBDcache.scala:411:24]
    .io_in_0_valid           (_mmios_0_io_resp_valid),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_addr       (_mmios_0_io_resp_bits_addr),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_tag        (_mmios_0_io_resp_bits_tag),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_cmd        (_mmios_0_io_resp_bits_cmd),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_size       (_mmios_0_io_resp_bits_size),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_signed     (_mmios_0_io_resp_bits_signed),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_dprv       (_mmios_0_io_resp_bits_dprv),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_dv         (_mmios_0_io_resp_bits_dv),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_data       (_mmios_0_io_resp_bits_data),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_mask       (_mmios_0_io_resp_bits_mask),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_has_data   (_mmios_0_io_resp_bits_has_data),	// @[NBDcache.scala:418:22]
    .io_in_0_bits_store_data (_mmios_0_io_resp_bits_store_data),	// @[NBDcache.scala:418:22]
    .io_out_ready            (io_resp_ready),
    .io_in_0_ready           (_resp_arb_io_in_0_ready),
    .io_out_valid            (io_resp_valid),
    .io_out_bits_addr        (io_resp_bits_addr),
    .io_out_bits_tag         (io_resp_bits_tag),
    .io_out_bits_cmd         (io_resp_bits_cmd),
    .io_out_bits_size        (io_resp_bits_size),
    .io_out_bits_signed      (io_resp_bits_signed),
    .io_out_bits_dprv        (io_resp_bits_dprv),
    .io_out_bits_dv          (io_resp_bits_dv),
    .io_out_bits_data        (io_resp_bits_data),
    .io_out_bits_mask        (io_resp_bits_mask),
    .io_out_bits_has_data    (io_resp_bits_has_data),
    .io_out_bits_store_data  (io_resp_bits_store_data)
  );
  IOMSHR mmios_0 (	// @[NBDcache.scala:418:22]
    .clock                      (clock),
    .reset                      (reset),
    .io_req_valid               (_mmio_alloc_arb_io_in_0_ready),	// @[NBDcache.scala:409:30]
    .io_req_bits_addr           (io_req_bits_addr),
    .io_req_bits_tag            (io_req_bits_tag),
    .io_req_bits_cmd            (io_req_bits_cmd),
    .io_req_bits_size           (io_req_bits_size),
    .io_req_bits_signed         (io_req_bits_signed),
    .io_req_bits_dprv           (io_req_bits_dprv),
    .io_req_bits_dv             (io_req_bits_dv),
    .io_req_bits_data           (io_req_bits_data),
    .io_req_bits_mask           (io_req_bits_mask),
    .io_resp_ready              (_resp_arb_io_in_0_ready),	// @[NBDcache.scala:411:24]
    .io_mem_access_ready        (io_mem_acquire_ready & (idle ? ~_GEN_1 : state_4)),	// @[Arbiter.scala:17:61, :89:28, :117:26, :122:24, :124:31, package.scala:245:43]
    .io_mem_ack_valid           (io_mem_grant_valid & io_mem_grant_bits_source == 3'h4),	// @[Mux.scala:47:70, NBDcache.scala:427:{49,77}]
    .io_mem_ack_bits_data       (io_mem_grant_bits_data),
    .io_req_ready               (_mmios_0_io_req_ready),
    .io_resp_valid              (_mmios_0_io_resp_valid),
    .io_resp_bits_addr          (_mmios_0_io_resp_bits_addr),
    .io_resp_bits_tag           (_mmios_0_io_resp_bits_tag),
    .io_resp_bits_cmd           (_mmios_0_io_resp_bits_cmd),
    .io_resp_bits_size          (_mmios_0_io_resp_bits_size),
    .io_resp_bits_signed        (_mmios_0_io_resp_bits_signed),
    .io_resp_bits_dprv          (_mmios_0_io_resp_bits_dprv),
    .io_resp_bits_dv            (_mmios_0_io_resp_bits_dv),
    .io_resp_bits_data          (_mmios_0_io_resp_bits_data),
    .io_resp_bits_mask          (_mmios_0_io_resp_bits_mask),
    .io_resp_bits_has_data      (_mmios_0_io_resp_bits_has_data),
    .io_resp_bits_store_data    (_mmios_0_io_resp_bits_store_data),
    .io_mem_access_valid        (_mmios_0_io_mem_access_valid),
    .io_mem_access_bits_opcode  (_mmios_0_io_mem_access_bits_opcode),
    .io_mem_access_bits_param   (_mmios_0_io_mem_access_bits_param),
    .io_mem_access_bits_size    (_mmios_0_io_mem_access_bits_size),
    .io_mem_access_bits_source  (_mmios_0_io_mem_access_bits_source),
    .io_mem_access_bits_address (_mmios_0_io_mem_access_bits_address),
    .io_mem_access_bits_mask    (_mmios_0_io_mem_access_bits_mask),
    .io_mem_access_bits_data    (_mmios_0_io_mem_access_bits_data),
    .io_replay_next             (io_replay_next)
  );
  assign io_req_ready = _io_req_ready_output;	// @[NBDcache.scala:443:22]
  assign io_secondary_miss = idx_match;	// @[NBDcache.scala:394:27]
  assign io_mem_acquire_valid = out_5_valid;	// @[Arbiter.scala:126:29]
  assign io_mem_acquire_bits_opcode = (muxStateEarly_0 ? 3'h6 : 3'h0) | (muxStateEarly_1 ? 3'h6 : 3'h0) | (muxStateEarly_2 ? 3'h6 : 3'h0) | (muxStateEarly_3 ? 3'h6 : 3'h0) | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_opcode : 3'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:418:22, ReadyValidCancel.scala:68:19]
  assign io_mem_acquire_bits_param = (muxStateEarly_0 ? _mshrs_0_io_mem_acquire_bits_param : 3'h0) | (muxStateEarly_1 ? _mshrs_1_io_mem_acquire_bits_param : 3'h0) | (muxStateEarly_2 ? _mshrs_2_io_mem_acquire_bits_param : 3'h0) | (muxStateEarly_3 ? _mshrs_3_io_mem_acquire_bits_param : 3'h0) | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_param : 3'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:367:22, :418:22, ReadyValidCancel.scala:68:19]
  assign io_mem_acquire_bits_size = (muxStateEarly_0 ? 4'h6 : 4'h0) | (muxStateEarly_1 ? 4'h6 : 4'h0) | (muxStateEarly_2 ? 4'h6 : 4'h0) | (muxStateEarly_3 ? 4'h6 : 4'h0) | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_size : 4'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:418:22, ReadyValidCancel.scala:68:19]
  assign io_mem_acquire_bits_source = {1'h0, muxStateEarly_2, muxStateEarly_1} | (muxStateEarly_3 ? 3'h3 : 3'h0) | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_source : 3'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:418:22, ReadyValidCancel.scala:68:19]
  assign io_mem_acquire_bits_address = (muxStateEarly_0 ? _mshrs_0_io_mem_acquire_bits_address : 32'h0) | (muxStateEarly_1 ? _mshrs_1_io_mem_acquire_bits_address : 32'h0) | (muxStateEarly_2 ? _mshrs_2_io_mem_acquire_bits_address : 32'h0) | (muxStateEarly_3 ? _mshrs_3_io_mem_acquire_bits_address : 32'h0) | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_address : 32'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:367:22, :418:22]
  assign io_mem_acquire_bits_mask = {8{muxStateEarly_0}} | {8{muxStateEarly_1}} | {8{muxStateEarly_2}} | {8{muxStateEarly_3}} | (muxStateEarly_4 ? _mmios_0_io_mem_access_bits_mask : 8'h0);	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:418:22]
  assign io_mem_acquire_bits_data = muxStateEarly_4 ? _mmios_0_io_mem_access_bits_data : 64'h0;	// @[Arbiter.scala:118:30, Mux.scala:27:73, NBDcache.scala:418:22, ReadyValidCancel.scala:68:19]
  assign io_mem_finish_valid = out_10_valid;	// @[Arbiter.scala:126:29]
  assign io_mem_finish_bits_sink = ((beatsLeft_1 ? state_1_0 : _mshrs_0_io_mem_finish_valid) ? _mshrs_0_io_mem_finish_bits_sink : 3'h0) | ((beatsLeft_1 ? state_1_1 : earlyWinner_1_1) ? _mshrs_1_io_mem_finish_bits_sink : 3'h0) | ((beatsLeft_1 ? state_1_2 : earlyWinner_1_2) ? _mshrs_2_io_mem_finish_bits_sink : 3'h0) | ((beatsLeft_1 ? state_1_3 : earlyWinner_1_3) ? _mshrs_3_io_mem_finish_bits_sink : 3'h0);	// @[Arbiter.scala:88:30, :98:79, :117:26, :118:30, Mux.scala:27:73, NBDcache.scala:367:22, ReadyValidCancel.scala:68:19]
  assign io_refill_way_en = _GEN_5[io_mem_grant_bits_source[1:0]];	// @[NBDcache.scala:447:13]
  assign io_refill_addr = _GEN_6[io_mem_grant_bits_source[1:0]];	// @[NBDcache.scala:447:13]
  assign io_replay_valid = _replay_arb_io_out_valid;	// @[NBDcache.scala:355:26]
  assign io_replay_bits_cmd = _replay_arb_io_out_bits_cmd;	// @[NBDcache.scala:355:26]
  assign io_probe_rdy = ~(~_mshrs_3_io_probe_rdy | ~_mshrs_2_io_probe_rdy | ~_mshrs_1_io_probe_rdy | ~_mshrs_0_io_probe_rdy);	// @[NBDcache.scala:364:16, :367:22, :397:{11,31,46}]
  assign io_fence_rdy = ~(~_mmios_0_io_req_ready | ~_mshrs_3_io_req_pri_rdy | ~_mshrs_2_io_req_pri_rdy | ~_mshrs_1_io_req_pri_rdy | ~_mshrs_0_io_req_pri_rdy);	// @[NBDcache.scala:363:16, :367:22, :396:{11,33,48}, :418:22, :431:{11,31,46}]
endmodule

